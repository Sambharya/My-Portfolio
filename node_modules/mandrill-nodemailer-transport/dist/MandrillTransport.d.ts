import type { Transport } from 'nodemailer';
import type MailMessage from 'nodemailer/lib/mailer/mail-message';
import type { Envelope } from 'nodemailer/lib/mime-node';
export interface Options {
    apiKey: string;
}
export declare type MandrillResponse = {
    _id: string;
    email: string;
    status: string;
    reject_reason: string | null;
};
export declare type SentMessageInfo = {
    envelope: Envelope;
    messageId: string;
    message: any;
    response?: MandrillResponse[];
};
export declare class MandrillTransport implements Transport {
    private options;
    name: string;
    version: string;
    constructor(options: Options);
    send(mail: MailMessage, done: (err: Error | null, info?: SentMessageInfo) => void): void;
}
export default MandrillTransport;
